import{n as e}from"./main.e72b2d96.js";import"./vendor.70269bfe.js";const t=["altKey","metaKey","ctrlKey","shiftKey"],s={props:{keyEvent:{type:String,default:"keyup"},keyCode:{type:Number,default:null},modifiers:{type:Array,default:()=>[]},preventDefault:{type:Boolean},multipleKeys:{type:Array,default:()=>[]}},data:()=>({keyListeners:[]}),mounted(){this.setupListeners()},destroyed(){for(const{keyEvent:e,listener:t}of this.keyListeners)window.removeEventListener(e,t)},methods:{setupListeners(){const e={keyEvent:this.keyEvent,keyCode:this.keyCode,preventDefault:this.preventDefault,modifiers:this.modifiers,multipleKeys:this.multipleKeys};this.addEventListener(e)},addEventListener(e){let t=this.eventHandler(e);window.addEventListener(e.keyEvent,t),this.keyListeners.push({expectedEvent:e,listener:t})},eventHandler(e){return s=>{const n=(t,n)=>{this.$emit(t,{event:s,expectedEvent:e,message:n})};n("any","Any key was pressed.");const r=e.multipleKeys.length>0;if(!e.keyCode&&!r)return void n("success","Any key was pressed.");let i=[e];r&&(i=e.multipleKeys);for(const o of i){if(!(o.keyCode===s.keyCode))continue;if(o.modifiers.length>0){if(!t.every((e=>s[e]==(-1!==o.modifiers.indexOf(e)))))continue}return e.preventDefault&&s.preventDefault(),void n("success","Correct key(s) pressed.")}n("wrong","Wrong key(s) pressed.")}}},render:()=>null};const n={};var r=e(s,undefined,undefined,!1,i,null,null,null);function i(e){for(let t in n)this[t]=n[t]}r.options.__file="node_modules/vue-keypress/src/index.vue";const o=function(){return r.exports}();export{o as default};